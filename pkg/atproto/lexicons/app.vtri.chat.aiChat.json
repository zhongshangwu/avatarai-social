{
  "lexicon": 1,
  "id": "app.vtri.chat.aiChat",
  "description": "AI 聊天中的结构定义",
  "defs": {
    "Message": {
      "type": "record",
      "description": "The AI Chat Message object",
      "key": "any",
      "record": {
        "type": "object",
        "required": [
          "id",
          "role",
          "text",
          "messageItems",
          "messageId",
          "interruptType",
          "status",
          "userId",
          "createdAt",
          "updatedAt"
        ],
        "nullable": [
          "error",
          "incompleteDetails",
          "usage",
          "tools",
          "metadata"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this AI Chat Message"
          },
          "messageId": {
            "type": "string",
            "description": "消息ID, 引用 message.id"
          },
          "role": {
            "type": "string",
            "description": "消息角色",
            "enum": ["user", "assistant", "system"]
          },
          "text": {
            "type": "string",
            "description": "消息内容(纯文本)"
          },
          "messageItems": {
            "type": "array",
            "description": "An array of content items generated by the model",
            "items": {
              "type": "ref",
              "ref": "#OutputItem"
            }
          },
          "interruptType": {
            "type": "integer",
            "description": "消息是否有被中断",
            "default": 0
          },
          "status": {
            "type": "string",
            "description": "The status of the response generation. One of `completed`, `failed`, `in_progress`, or `incomplete`",
            "enum": ["completed", "failed", "in_progress", "incomplete"]
          },
          "error": {
            "type": "ref",
            "ref": "#ResponseError"
          },
          "userId": {
            "type": "string",
            "description": "用户ID (可能是用户ID， 也可以是 AssistantID)"
          },
          "createdAt": {
            "type": "integer",
            "description": "创建时间"
          },
          "updatedAt": {
            "type": "integer",
            "description": "更新时间"
          },
          "incompleteDetails": {
            "type": "object",
            "description": "Details about why the response is incomplete",
            "properties": {
              "reason": {
                "type": "string",
                "description": "The reason why the response is incomplete",
                "enum": ["max_output_tokens", "content_filter"]
              }
            }
          },
          "usage": {
            "type": "ref",
            "ref": "#ResponseUsage"
          },
          "tools": {
            "type": "array",
            "description": "The tools available to the model",
            "items": {
              "type": "object"
            }
          },
          "metadata": {
            "type": "object",
            "description": "Additional metadata for the response"
          }
        }
      }
    },
    "InputMessage": {
      "type": "object",
      "description": "具有指示层次结构角色的模型输入消息",
      "required": ["role", "content"],
      "properties": {
        "type": {
          "type": "string",
          "description": "消息输入的类型。始终设置为`message`",
          "enum": ["message"],
          "const": "message"
        },
        "role": {
          "type": "string",
          "description": "消息输入的角色。可以是`user`、`system`或`developer`之一",
          "enum": ["user", "system", "developer"]
        },
        "status": {
          "type": "string",
          "description": "项目的状态。可以是`in_progress`、`completed`或`incomplete`之一",
          "enum": ["in_progress", "completed", "incomplete"]
        },
        "content": {
          "type": "array",
          "items": {
            "type": "union",
            "refs": [
              "#InputTextContent",
              "#InputImageContent",
              "#InputFileContent"
            ]
          }
        }
      }
    },
    "InputTextContent": {
      "type": "object",
      "description": "模型的文本输入",
      "required": ["type", "text"],
      "properties": {
        "type": {
          "type": "string",
          "description": "输入项的类型。始终为`input_text`",
          "enum": ["input_text"],
          "const": "input_text"
        },
        "text": {
          "type": "string",
          "description": "模型的文本输入"
        }
      }
    },
    "InputImageContent": {
      "type": "object",
      "description": "模型的图像输入",
      "required": ["type", "detail"],
      "properties": {
        "type": {
          "type": "string",
          "description": "输入项的类型。始终为`input_image`",
          "enum": ["input_image"],
          "const": "input_image"
        },
        "imageUrl": {
          "type": "string",
          "description": "图像URL"
        },
        "fileId": {
          "type": "string",
          "description": "要发送到模型的文件的ID"
        },
        "detail": {
          "type": "string",
          "description": "要发送到模型的图像的细节级别。可以是`high`、`low`或`auto`之一。默认为`auto`",
          "enum": ["low", "high", "auto"]
        }
      }
    },
    "InputFileContent": {
      "type": "object",
      "description": "模型的文件输入",
      "required": ["type", "fileId"],
      "properties": {
        "type": {
          "type": "string",
          "description": "输入项的类型。始终为`input_file`",
          "enum": ["input_file"],
          "const": "input_file"
        },
        "fileId": {
          "type": "string",
          "description": "要发送到模型的文件的ID"
        }
      }
    },
    "ResponseError": {
      "type": "object",
      "description": "An error object returned when the model fails to generate a Response",
      "required": ["code", "message"],
      "properties": {
        "code": {
          "type": "ref",
          "ref": "#ResponseErrorCode",
          "description": "The error code"
        },
        "message": {
          "type": "string",
          "description": "A human-readable description of the error"
        }
      }
    },
    "ResponseErrorCode": {
      "type": "string",
      "description": "The error code for the response",
      "enum": [
        "server_error",
        "rate_limit_exceeded",
        "invalid_prompt",
        "vector_store_timeout",
        "invalid_image",
        "invalid_image_format",
        "invalid_base64_image",
        "invalid_image_url",
        "image_too_large",
        "image_too_small",
        "image_parse_error",
        "image_content_policy_violation",
        "invalid_image_mode",
        "image_file_too_large",
        "unsupported_image_media_type",
        "empty_image_file",
        "failed_to_download_image",
        "image_file_not_found"
      ]
    },
    "ResponseUsage": {
      "type": "object",
      "description": "Represents token usage details including input tokens, output tokens, a breakdown of output tokens, and the total tokens used",
      "required": [
        "inputTokens",
        "inputTokensDetails",
        "outputTokens",
        "outputTokensDetails",
        "totalTokens"
      ],
      "properties": {
        "inputTokens": {
          "type": "integer",
          "description": "The number of input tokens"
        },
        "inputTokensDetails": {
          "type": "object",
          "description": "A detailed breakdown of the input tokens",
          "required": ["cachedTokens"],
          "properties": {
            "cachedTokens": {
              "type": "integer",
              "description": "The number of tokens that were retrieved from the cache"
            }
          }
        },
        "outputTokens": {
          "type": "integer",
          "description": "The number of output tokens"
        },
        "outputTokensDetails": {
          "type": "object",
          "description": "A detailed breakdown of the output tokens",
          "required": ["reasoningTokens"],
          "properties": {
            "reasoningTokens": {
              "type": "integer",
              "description": "The number of reasoning tokens"
            }
          }
        },
        "totalTokens": {
          "type": "integer",
          "description": "The total number of tokens used"
        }
      }
    },
    "OutputItem": {
      "type": "union",
      "description": "An output item from the model",
      "refs": [
        "#OutputMessage",
        "#FunctionToolCall",
        "#ReasoningItem"
      ]
    },
    "OutputMessage": {
      "type": "object",
      "description": "An output message from the model",
      "required": ["id", "type", "role", "content", "status"],
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of the output message"
        },
        "type": {
          "type": "string",
          "const": "message",
          "description": "The type of the output message. Always `message`"
        },
        "role": {
          "type": "string",
          "const": "assistant",
          "description": "The role of the output message. Always `assistant`"
        },
        "content": {
          "type": "array",
          "description": "The content of the output message",
          "items": {
            "type": "ref",
            "ref": "#OutputContent"
          }
        },
        "status": {
          "type": "string",
          "description": "The status of the message input. One of `in_progress`, `completed`, or `incomplete`",
          "enum": ["in_progress", "completed", "incomplete"]
        }
      }
    },
    "FunctionToolCall": {
      "type": "object",
      "description": "A function tool call from the model",
      "required": ["id", "type", "name", "status"],
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of the function tool call"
        },
        "type": {
          "type": "string",
          "const": "tool_call",
          "description": "The type of the output item. Always `tool_call`"
        },
        "name": {
          "type": "string",
          "description": "The name of the function being called"
        },
        "status": {
          "type": "string",
          "description": "The status of the function tool call. One of `in_progress`, `completed`, or `incomplete`",
          "enum": ["in_progress", "completed", "incomplete"]
        },
        "arguments": {
          "type": "string",
          "description": "The arguments to the function as a JSON string"
        }
      }
    },
    "ReasoningItem": {
      "type": "object",
      "description": "A description of the chain of thought used by a reasoning model while generating a response",
      "required": ["id", "summary", "type"],
      "properties": {
        "type": {
          "type": "string",
          "const": "reasoning",
          "description": "The type of the object. Always `reasoning`"
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the reasoning content"
        },
        "summary": {
          "type": "array",
          "description": "Reasoning text contents",
          "items": {
            "type": "object",
            "required": ["type", "text"],
            "properties": {
              "type": {
                "type": "string",
                "const": "summary_text",
                "description": "The type of the object. Always `summary_text`"
              },
              "text": {
                "type": "string",
                "description": "A short summary of the reasoning used by the model when generating the response"
              }
            }
          }
        },
        "status": {
          "type": "string",
          "description": "The status of the item. One of `in_progress`, `completed`, or `incomplete`",
          "enum": ["in_progress", "completed", "incomplete"]
        }
      }
    },
    "OutputContent": {
      "type": "union",
      "description": "Content output from the model",
      "refs": [
        "#OutputTextContent",
        "#RefusalContent"
      ]
    },
    "OutputTextContent": {
      "type": "object",
      "description": "A text output from the model",
      "required": ["type", "text"],
      "properties": {
        "type": {
          "type": "string",
          "const": "output_text",
          "description": "The type of the output text. Always `output_text`"
        },
        "text": {
          "type": "string",
          "description": "The text output from the model"
        },
        "annotations": {
          "type": "array",
          "description": "The annotations of the text output",
          "items": {
            "type": "ref",
            "ref": "#Annotation"
          }
        }
      }
    },
    "RefusalContent": {
      "type": "object",
      "description": "A refusal from the model",
      "required": ["type", "refusal"],
      "properties": {
        "type": {
          "type": "string",
          "const": "refusal",
          "description": "The type of the refusal. Always `refusal`"
        },
        "refusal": {
          "type": "string",
          "description": "The refusal explanation from the model"
        }
      }
    },
    "Annotation": {
      "type": "union",
      "description": "An annotation in the text output",
      "refs": [
        "#FileCitationBody",
        "#UrlCitationBody"
      ]
    },
    "FileCitationBody": {
      "type": "object",
      "description": "A citation to a file",
      "required": ["type", "fileId", "index"],
      "properties": {
        "type": {
          "type": "string",
          "const": "file_citation",
          "description": "The type of the file citation. Always `file_citation`"
        },
        "fileId": {
          "type": "string",
          "description": "The ID of the file"
        },
        "index": {
          "type": "integer",
          "description": "The index of the file in the list of files"
        }
      }
    },
    "UrlCitationBody": {
      "type": "object",
      "description": "A citation for a web resource used to generate a model response",
      "required": ["type", "url", "startIndex", "endIndex", "title"],
      "properties": {
        "type": {
          "type": "string",
          "const": "url_citation",
          "description": "The type of the URL citation. Always `url_citation`"
        },
        "url": {
          "type": "string",
          "description": "The URL of the web resource"
        },
        "startIndex": {
          "type": "integer",
          "description": "The index of the first character of the URL citation in the message"
        },
        "endIndex": {
          "type": "integer",
          "description": "The index of the last character of the URL citation in the message"
        },
        "title": {
          "type": "string",
          "description": "The title of the web resource"
        }
      }
    }
  }
}
